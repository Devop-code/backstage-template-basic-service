apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: basic-service-template
  title: Basic BOAZ-STUDY Service
  description: Crée un nouveau service générique pour BOAZ-STUDY.
  tags:
    - recommended
    - nodejs
    - service
    - boaz-study
spec:
  owner: group:default/boaz-study-core-team
  type: service

  parameters:
    - title: Informations sur le nouveau service
      required:
        - serviceName
        - description
        - owner
      properties:
        serviceName:
          title: Nom du Service
          type: string
          description: Nom unique du nouveau service (utilisé pour le dépôt GitHub et l'entité Backstage).
          ui:autofocus: true
          ui:options:
            rows: 1
        description:
          title: Description
          type: string
          description: Courte description du service.
        owner:
          title: Propriétaire
          type: string
          description: Groupe ou utilisateur Backstage propriétaire de ce service.
          ui:field: OwnerPicker
          ui:options:
            allowedKinds: [Group, User]
        repoUrl:
          title: URL du Dépôt
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com

  steps:
    - id: fetch-base-and-template
      name: Récupération et templating du squelette de base
      action: fetch:template 
      input:
        url: ./skeleton 
        targetPath: ./ # Les fichiers templatisés seront placés à la racine du dossier de travail temporaire
        values: # <-- IMPORTANT : Passez ici les données pour le templating Nunjucks
          serviceName: ${{ parameters.serviceName }}
          description: ${{ parameters.description }}
          owner: ${{ parameters.owner }}
          # Exemples de variables supplémentaires que vous pourriez vouloir passer
          serviceNameKebabCase: ${{ parameters.serviceName | lower | replace(' ', '-') }}
          # Ajoutez d'autres paramètres du formulaire si vous en avez besoin dans vos fichiers de squelette

    # Supprimez l'action 'generate-files' avec 'handlebars:template' car 'fetch:template' s'en charge.
    # Si vous avez besoin de traiter d'autres fichiers (non inclus dans le squelette initial)
    # avec Nunjucks APRÈS la copie du squelette, vous pouvez ajouter une autre action 'fs:scaffold'
    # ou 'fs:rename' si nécessaire, mais ce n'est généralement pas nécessaire pour un service basique.

    - id: publish
      name: Publication sur GitHub
      action: publish:github
      input:
        repoUrl: ${{ parameters.repoUrl }}
        defaultBranch: main
        description: ${{ parameters.description }}
        sourcePath: ./ # Assurez-vous que c'est le chemin des fichiers à publier

    - id: register
      name: Enregistrement dans le catalogue Backstage
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish'].output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml' # Assurez-vous que votre 'skeleton' inclut un catalog-info.yaml

  output:
    url: ${{ steps['publish'].output.remoteUrl }}
    entityRef: ${{ steps['register'].output.entityRef }}
